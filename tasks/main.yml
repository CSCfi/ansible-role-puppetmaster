---
- name: set ssh config for root user
  template: src=ssh_config dest=/root/.ssh/config owner=root group=root mode=0600

- name: stat path for puppet_etc_dir - used check if puppet is already configured
  stat: 
    path: "{{puppet_etc_dir}}"
  register: puppet_configured
  ignore_errors: True

- name: install puppetlabs repo
  yum:
    name: "{{puppetlabs_repo_url}}"
    state: present

- name: install tools packages
  yum:
    name: "{{rpm_packages}}"
    state: present

- name: install ruby gems
  gem: name="{{item.gem}}" state=present user_install=no version="{{item.version}}" executable=/opt/puppetlabs/puppet/bin/gem
  with_items: "{{ruby_gems_versions}}"

- name: deploy basic puppet.conf for initial bootstrapping
  template: src=puppet.conf dest={{puppet_etc_dir}}/puppet.conf

- name: deploy basic puppetdb.conf for initial bootstrapping
  template: src=puppetdb.conf dest={{puppet_etc_dir}}/puppetdb.conf

- name: ensure hiera keys directory exists
  file: path="{{hiera_credentials_dir}}" state=directory
        group={{puppet_username}} owner={{puppet_username}} mode=0750

- name: deploy hiera private key
  copy: content="{{hiera_private_key}}" dest="{{hiera_private_key_file}}"
        group={{puppet_username}} owner={{puppet_username}} mode=0400
  when: hiera_private_key != ""

- name: deploy hiera public key
  copy: content="{{hiera_public_key}}" dest="{{hiera_public_key_file}}"
        group={{puppet_username}} owner={{puppet_username}} mode=0440
  when: hiera_public_key != ""

- name: ensure puppet ssl directory exists
  file: path="{{puppet_data_dir}}/ssl" state=directory
        group={{puppet_username}} owner={{puppet_username}} mode=0771

- name: ensure puppet ca directory exists
  file: path="{{puppet_data_dir}}/ssl/ca" state=directory
        group={{puppet_username}} owner={{puppet_username}} mode=0755

- name: deploy puppetmaster CA private key
  copy: content="{{puppetmaster_ca_privkey}}" dest="{{puppetmaster_ca_privkey_file}}"
        group={{puppet_username}} owner={{puppet_username}} mode=0640
  when: puppetmaster_ca_privkey != ""

- name: deploy puppetmaster CA certificate
  copy: content="{{puppetmaster_ca_cert}}" dest="{{puppetmaster_ca_cert_file}}"
        group={{puppet_username}} owner={{puppet_username}} mode=0640
  when: puppetmaster_ca_cert != ""

- name: deploy a configuration file for r10k
  template: src=r10k.yaml dest={{puppet_etc_dir}}/r10k.yaml

- name: deploy a configuration file for hiera
  template: src=hiera.yaml dest={{puppet_etc_dir}}/hiera.yaml

- name: deploy puppet environment with r10k
  command: "/opt/puppetlabs/puppet/bin/r10k deploy environment -c {{puppet_etc_dir}}/r10k.yaml -p -v error {{puppet_environment}}"

- name: generate types for the environments to prevent autoload issues
  command: "/opt/puppetlabs/bin/puppet generate types --environment {{ puppet_environment }}"

- name: ensure puppet can create the modules directory
  file:
    path: "{{ puppet_code_dir }}"
    owner: "{{ puppet_username }}"
    group: "{{ puppet_username }}"
    recurse: yes
    state: directory

# puppetserver manages its own gems, and hiera-eyaml needs to be added to those gems for secrets to get passed properly to agents.
- name: list puppetserver gems and grep for hiera-eyaml
  shell: /opt/puppetlabs/server/bin/puppetserver gem list | grep hiera-eyaml
  register: gem_list_eyaml
  ignore_errors: True
  changed_when: False

- name: install hiera-eyaml with proxy defined if puppetserver gem list did not find it
  command: "/opt/puppetlabs/server/bin/puppetserver gem install hiera-eyaml -p {{ yum_proxy }}"
  when: not ansible_check_mode and gem_list_eyaml.rc != 0 and yum_proxy is defined

- name: try hiera-eyaml gem install without proxy if proxy is not defined
  shell: /opt/puppetlabs/server/bin/puppetserver gem install hiera-eyaml
  when: not ansible_check_mode and gem_list_eyaml.rc != 0 and yum_proxy is not defined

- name: generate client certificate for puppetmaster on bootstrap
  command: "/opt/puppetlabs/bin/puppet cert --generate {{hostname}}"
  when: not puppet_configured.stat.exists

- name: ignite CA directory on bootstrap
  command: "/opt/puppetlabs/bin/puppet cert list -a"
  when: not puppet_configured.stat.exists

- name: run masterless puppet to configure the puppetmaster - NOTE! this will always create a change due to CCCP-2840
  command: "/opt/puppetlabs/bin/puppet apply --detailed-exitcodes --environment {{puppet_environment}} --pluginsync --hiera_config {{puppet_etc_dir}}/hiera.yaml --modulepath {{puppet_code_dir}}/environments/{{puppet_environment}}/modules {{puppet_code_dir}}/environments/{{puppet_environment}}/manifests"
  register: puppet_result
  failed_when: (puppet_result.rc != 2) and (puppet_result.rc != 0)
  changed_when: (puppet_result.rc == 2) or (puppet_result.rc == 4) or (puppet_result.rc == 6)

- name: puppet agent to configure the puppetmaster
  command: "/opt/puppetlabs/bin/puppet agent -t --environment {{puppet_environment}} --server {{ inventory_hostname }}"
  register: reg_puppet_agent_result
  failed_when: (reg_puppet_agent_result.rc != 2) and (reg_puppet_agent_result.rc != 0)
  changed_when: (reg_puppet_agent_result.rc == 2) or (reg_puppet_agent_result.rc == 4) or (reg_puppet_agent_result.rc == 6)
  when: ansible_connection != 'local'
  environment:
    no_proxy: "{{ inventory_hostname }}"
